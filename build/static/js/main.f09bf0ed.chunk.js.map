{"version":3,"sources":["components/MainPage/geoMap.js","redux/MainPageReducer.js","components/MainPage/mainContainer.js","components/HistoryPage/GeoCoordinate.js","components/HistoryPage/Coordinates.js","components/HistoryPage/historyContainer.js","App.js","serviceWorker.js","redux/store.js","index.js","components/HistoryPage/style.module.css","components/MainPage/style.module.css"],"names":["GeoMap","props","useEffect","navigator","geolocation","getCurrentPosition","position","latitude","coords","longitude","Geocode","setApiKey","fromLatLng","then","response","address","results","formatted_address","a","fetch","api_url","json","data","console","log","temp","main","feelsLike","feels_like","description","weather","addItem","gettingWeather","error","center","lat","lng","className","style","info","block","name","googleMapsApiKey","mapContainerStyle","margin","width","height","zoom","onLoad","map","initialState","coordinates","id","date","Date","MainReducers","state","action","type","filter","newItem","getTime","connect","mainPage","length","dispatch","addGeoItem","GeoCoordinate","visible","showModal","setState","handleOk","e","handleCancel","this","coordinate","removeItem","options","era","year","month","day","weekday","timezone","hour","minute","second","onClick","toLocaleString","danger","size","button","title","onOk","onCancel","React","Component","Coordinates","employeeElement","key","groupBlocks","requestGeoCoordinates","removeGeoItem","Header","Layout","Content","Footer","App","theme","mode","defaultSelectedKeys","Item","to","padding","minHeight","path","render","exact","from","textAlign","Boolean","window","location","hostname","match","reducers","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","document","getElementById","serviceWorker","ready","registration","unregister","catch","message","module","exports"],"mappings":"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","file":"static/js/main.f09bf0ed.chunk.js","sourcesContent":["import React, {useEffect} from 'react'\r\nimport {GoogleMap, LoadScript, Marker} from '@react-google-maps/api';\r\nimport Geocode from \"react-geocode\";\r\nimport style from \"./style.module.css\"\r\n\r\nconst GeoMap = (props) => {\r\n\r\n    useEffect(() => {\r\n        const geoFindMe = () => {\r\n\r\n            const success = position => {\r\n                const latitude = position.coords.latitude;\r\n                const longitude = position.coords.longitude;\r\n\r\n                Geocode.setApiKey(\"AIzaSyDal_A90HrAXBxIgC4jH4MyCKcbPTSnlJo\");\r\n                Geocode.fromLatLng(latitude, longitude).then(\r\n                    response => {\r\n                        const address = response.results[0].formatted_address;\r\n\r\n                        const gettingWeather = async () => {\r\n                            const api_url =\r\n                                await fetch(`https://openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=439d4b804bc8187953eb36d2a8c26a02&units=metric`);\r\n                            const data = await api_url.json();\r\n                            console.log(data);\r\n                            const temp = data.main.temp\r\n                            const feelsLike = data.main.feels_like\r\n                            const description = data.weather[0].description\r\n                            props.addItem(latitude, longitude, address, temp, feelsLike, description);\r\n                        }\r\n                        gettingWeather()\r\n\r\n\r\n                    },\r\n                    error => {\r\n                        console.error(error);\r\n                    }\r\n                );\r\n            };\r\n            navigator.geolocation.getCurrentPosition(success);\r\n        };\r\n        geoFindMe()\r\n    }, [])\r\n\r\n\r\n\r\n    const containerStyle = {\r\n        margin: \"auto\",\r\n        width: '70vw',\r\n        height: '100vh'\r\n    };\r\n\r\n    const center = {\r\n        lat: props.latitude,\r\n        lng: props.longitude\r\n    };\r\n\r\n    const onMapLoad = map => {\r\n        console.log('map.data: ', map.data)\r\n        // map.data.loadGeoJson('/geo.json')\r\n    }\r\n\r\n    return (\r\n\r\n        <div>\r\n            <div className={style.info}>\r\n                <div  className={style.block}>\r\n                   <span className={style.name}>Latitude:</span> {props.latitude}, <span className={style.name}>Longitude:</span> {props.longitude}\r\n                </div>\r\n\r\n               <div  className={style.block}>\r\n                   <span className={style.name}>Address:</span> {props.address}\r\n               </div>\r\n                <div  className={style.block}>\r\n                   <span className={style.name}>Temperature:</span> {props.temp} degrees Celsius\r\n                </div>\r\n                <div  className={style.block}>\r\n                    <span className={style.name}>Feels Like:</span> {props.feelsLike} degrees Celsius\r\n                </div>\r\n                <div  className={style.block}>\r\n                    <span className={style.name}>Description: </span> {props.description}\r\n                </div>\r\n\r\n\r\n\r\n            </div>\r\n\r\n            <LoadScript\r\n                googleMapsApiKey=\"AIzaSyDal_A90HrAXBxIgC4jH4MyCKcbPTSnlJo\"\r\n            >\r\n                <GoogleMap\r\n                    mapContainerStyle={containerStyle}\r\n                    center={center}\r\n                    zoom={19}\r\n                    onLoad={onMapLoad}\r\n                >\r\n                    <Marker\r\n                        position={center}\r\n                    />\r\n                    <></>\r\n                </GoogleMap>\r\n            </LoadScript>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GeoMap;","const SET_GEOCOORDINATES = 'SET_GEOCOORDINATES';\r\nconst REMOVE_ITEM = 'REMOVE_ITEM';\r\nconst ADD_ITEM = 'ADD_ITEM';\r\n\r\n\r\nlet initialState = {\r\n    coordinates: [\r\n        {\r\n            id: 1,\r\n            latitude:  -21.8052,\r\n            longitude: -49.0898,\r\n            date: new Date('December 17, 1995 03:24:00'),\r\n            address: \"Unnamed Road, Iacanga - SP, 17180-000, Brazil\",\r\n            temp: 25,\r\n            feelsLike: 30,\r\n            description: 'Sunny'\r\n        }\r\n    ]\r\n\r\n};\r\n\r\nconst MainReducers = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_GEOCOORDINATES: {\r\n            return {\r\n                ...state,\r\n                coordinates: [...action.coordinates]\r\n            }\r\n        }\r\n        case REMOVE_ITEM: {\r\n            return {coordinates: [...state.coordinates].filter(coordinates => coordinates.id !== action.id)}\r\n        }\r\n        case ADD_ITEM: {\r\n            const newItem = {\r\n                latitude: action.latitude,\r\n                longitude: action.longitude,\r\n                date: (new Date()),\r\n                address: action.address,\r\n                temp: action.temp,\r\n                feelsLike: action.feelsLike,\r\n                description: action.description,\r\n                id: ((new Date()).getTime())\r\n            }\r\n            return {\r\n                ...state,\r\n                coordinates: [...state.coordinates, newItem],\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n};\r\n\r\n\r\nexport const setGeoCoordinates = (coordinates) => ({type: SET_GEOCOORDINATES, coordinates})\r\nexport const removeGeoItem = (id) => ({type: REMOVE_ITEM, id})\r\nexport const addGeoItem = (latitude, longitude, address, temp, feelsLike, description) => ({type: ADD_ITEM, latitude, longitude, address, temp, feelsLike, description})\r\n\r\n\r\nexport const requestGeoCoordinates = () => {\r\n    return  (dispatch) => {\r\n        dispatch(setGeoCoordinates())\r\n\r\n    }\r\n}\r\n\r\nexport const removeItem = (id) => (dispatch) => {\r\n    dispatch(removeGeoItem(id))\r\n}\r\n\r\nexport const addItem = (latitude, longitude, address, temp, feelsLike, description) => (dispatch) => {\r\n    dispatch(addGeoItem(latitude, longitude, address, temp, feelsLike, description))\r\n}\r\n\r\nexport default MainReducers;","import React from 'react'\r\nimport GeoMap from \"./geoMap\";\r\nimport {connect} from \"react-redux\";\r\nimport {addItem} from \"../../redux/MainPageReducer\";\r\n\r\n\r\nconst MainContainer = (props) => {\r\n    return (\r\n        <GeoMap\r\n            latitude={props.latitude}\r\n            longitude={props.longitude}\r\n            address={props.address}\r\n            addItem={props.addItem}\r\n            coordinates={props.coordinates}\r\n            feelsLike={props.feelsLike}\r\n            temp={props.temp}\r\n            description={props.description}\r\n        />\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        latitude: state.mainPage.coordinates[state.mainPage.coordinates.length - 1].latitude,\r\n        longitude: state.mainPage.coordinates[state.mainPage.coordinates.length - 1].longitude,\r\n        address: state.mainPage.coordinates[state.mainPage.coordinates.length - 1].address,\r\n        feelsLike: state.mainPage.coordinates[state.mainPage.coordinates.length - 1].feelsLike,\r\n        temp: state.mainPage.coordinates[state.mainPage.coordinates.length - 1].temp,\r\n        description: state.mainPage.coordinates[state.mainPage.coordinates.length - 1].description,\r\n        coordinates: state.mainPage.coordinates\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, {addItem})(MainContainer)","import React from \"react\";\r\nimport style from \"./style.module.css\";\r\nimport * as PropTypes from \"prop-types\";\r\nimport 'antd/dist/antd.css';\r\nimport {Modal, Button} from 'antd';\r\n\r\nclass GeoCoordinate extends React.Component {\r\n\r\n    state = {visible: false};\r\n\r\n    showModal = () => {\r\n        this.setState({\r\n            visible: true,\r\n        });\r\n    };\r\n\r\n    handleOk = e => {\r\n        console.log(e);\r\n        this.setState({\r\n            visible: false,\r\n        });\r\n    };\r\n\r\n    handleCancel = e => {\r\n        console.log(e);\r\n        this.setState({\r\n            visible: false,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        let {coordinate, id, removeItem} = this.props;\r\n\r\n\r\n        const removeEmployee = () => {\r\n            removeItem(id)\r\n        }\r\n\r\n        const options = {\r\n            era: 'long',\r\n            year: 'numeric',\r\n            month: 'long',\r\n            day: 'numeric',\r\n            weekday: 'long',\r\n            timezone: 'UTC',\r\n            hour: 'numeric',\r\n            minute: 'numeric',\r\n            second: 'numeric'\r\n        };\r\n\r\n        return <>\r\n\r\n\r\n            {\r\n                id !== 1 &&\r\n                <div className={style.block} onClick={() => {\r\n                }}>\r\n                <span>\r\n                            <div>  <span className={style.name}>Latitude:</span> {coordinate.latitude}</div>\r\n                            <div><span className={style.name}>Longitude:</span> {coordinate.longitude}</div>\r\n                            <div> <span className={style.name}>Address:</span> {coordinate.address}</div>\r\n                            <div> <span\r\n                                className={style.name}>Date:</span> {coordinate.date.toLocaleString(\"en\", options)}</div>\r\n                            <Button danger onClick={removeEmployee} size={\"small\"}\r\n                                    className={style.button}>Delete</Button>\r\n                    <Button type=\"primary\" onClick={this.showModal} size={\"small\"} className={style.button}>\r\n                    Open\r\n                    </Button>\r\n        <Modal\r\n            title=\"Basic Modal\"\r\n            visible={this.state.visible}\r\n            onOk={this.handleOk}\r\n            onCancel={this.handleCancel}\r\n        >\r\n            <div><span className={style.name}>Latitude:</span> {coordinate.latitude}</div>\r\n            <div><span className={style.name}>Longitude:</span> {coordinate.longitude}</div>\r\n            <div> <span className={style.name}>Address:</span> {coordinate.address}</div>\r\n            <div><span className={style.name}>Temperature:</span> {coordinate.temp} degrees Celsius</div>\r\n            <div> <span className={style.name}>Feels Like:</span> {coordinate.feelsLike} degrees Celsius</div>\r\n            <div><span className={style.name}>Description:</span> {coordinate.description}</div>\r\n            <div> <span className={style.name}>Date:</span> {coordinate.date.toLocaleString(\"en\", options)}</div>\r\n\r\n        </Modal>\r\n                        </span>\r\n                </div>\r\n            }\r\n\r\n\r\n        </>\r\n\r\n\r\n    }\r\n}\r\n\r\nGeoCoordinate.propTypes = {\r\n    coordinate: PropTypes.any,\r\n    id: PropTypes.any,\r\n    removeItem: PropTypes.any\r\n}\r\n\r\nexport default GeoCoordinate;","import React from \"react\";\r\nimport GeoCoordinate from \"./GeoCoordinate\";\r\nimport style from \"./style.module.css\"\r\n\r\nconst Coordinates = (props) => {\r\n    const employeeElement = props.coordinates.map(e => <GeoCoordinate coordinate={e} id={e.id} removeItem={props.removeItem}\r\n                                                                      key={e.id}/>)\r\n    return (\r\n        <div className={style.groupBlocks}>\r\n            {employeeElement}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Coordinates;\r\n","import React from \"react\";\r\nimport Coordinates from \"./Coordinates\";\r\nimport {removeItem, requestGeoCoordinates} from \"../../redux/MainPageReducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst HistoryContainer = (props) => {\r\n\r\n\r\n    return (\r\n       <Coordinates\r\n           removeItem={props.removeItem}\r\n           requestGeoCoordinates={props.requestGeoCoordinates}\r\n           latitude={props.latitude}\r\n           longitude={props.longitude}\r\n           date={props.date}\r\n           coordinates={props.coordinates}\r\n       />\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        latitude: state.mainPage.coordinates[state.mainPage.coordinates.length - 1].latitude,\r\n        longitude: state.mainPage.coordinates[state.mainPage.coordinates.length - 1].longitude,\r\n        date: state.mainPage.coordinates[state.mainPage.coordinates.length - 1].date,\r\n        coordinates: state.mainPage.coordinates\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, {requestGeoCoordinates, removeItem})(HistoryContainer)","import React from 'react';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport { Layout, Menu} from 'antd';\nimport {NavLink, Route, Redirect} from \"react-router-dom\";\nimport MainContainer from \"./components/MainPage/mainContainer\";\nimport HistoryContainer from \"./components/HistoryPage/historyContainer\";\n\n\nconst { Header, Content, Footer } = Layout;\n\n\nconst App = () => {\n  return (\n      <Layout className=\"layout\">\n        <Header>\n          <div className=\"logo\" />\n          <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['1']}>\n            <Menu.Item key=\"1\" >\n              <NavLink  to=\"/main\">Main</NavLink>\n            </Menu.Item>\n            <Menu.Item key=\"2\" >\n              <NavLink  to=\"/history\">History</NavLink>\n            </Menu.Item>\n          </Menu>\n        </Header>\n        <Content style={{ padding: '0 50px', minHeight: '100vh', margin: '50px'}}>\n\n          <div className=\"site-layout-content\">\n\n\n            <Route path='/history'\n                   render={() => <HistoryContainer/>}/>\n\n            <Route path='/main'\n                   render={() => <MainContainer/>}/>\n\n            <Redirect exact from=\"/\" to=\"/main\"/>\n\n          </div>\n        </Content>\n        <Footer style={{ textAlign: 'center' }}>©2020 Created by Ivan Sidarau</Footer>\n      </Layout>\n  )\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport MainReducers from \"./MainPageReducer\";\r\n\r\nlet reducers = combineReducers({\r\n    mainPage: MainReducers\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n\n    <BrowserRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </BrowserRouter>,\n\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"groupBlocks\":\"style_groupBlocks__1n_dy\",\"block\":\"style_block__352uR\",\"name\":\"style_name__3_ewQ\",\"button\":\"style_button__3ZUu-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"info\":\"style_info__-g1hr\",\"name\":\"style_name__340_n\",\"block\":\"style_block__2wdJ2\"};"],"sourceRoot":""}