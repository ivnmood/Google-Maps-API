{"ast":null,"code":"import _regeneratorRuntime from\"H:\\\\BSUIR\\\\Web\\\\Test task React NiblSoft\\\\my-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"H:\\\\BSUIR\\\\Web\\\\Test task React NiblSoft\\\\my-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import React,{useEffect}from'react';import{GoogleMap,LoadScript,Marker}from'@react-google-maps/api';import Geocode from\"react-geocode\";import style from\"./style.module.css\";var GeoMap=function GeoMap(props){useEffect(function(){var geoFindMe=function geoFindMe(){var success=function success(position){var latitude=position.coords.latitude;var longitude=position.coords.longitude;Geocode.setApiKey(\"AIzaSyDal_A90HrAXBxIgC4jH4MyCKcbPTSnlJo\");Geocode.fromLatLng(latitude,longitude).then(function(response){var address=response.results[0].formatted_address;var gettingWeather=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var api_url,data,temp,feelsLike,description;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"https://openweathermap.org/data/2.5/weather?lat=\".concat(latitude,\"&lon=\").concat(longitude,\"&appid=439d4b804bc8187953eb36d2a8c26a02&units=metric\"));case 2:api_url=_context.sent;_context.next=5;return api_url.json();case 5:data=_context.sent;console.log(data);temp=data.main.temp;feelsLike=data.main.feels_like;description=data.weather[0].description;props.addItem(latitude,longitude,address,temp,feelsLike,description);case 11:case\"end\":return _context.stop();}}},_callee);}));return function gettingWeather(){return _ref.apply(this,arguments);};}();gettingWeather();},function(error){console.error(error);});};navigator.geolocation.getCurrentPosition(success);};geoFindMe();},[]);var containerStyle={margin:\"auto\",width:'70vw',height:'100vh'};var center={lat:props.latitude,lng:props.longitude};var onMapLoad=function onMapLoad(map){console.log('map.data: ',map.data);// map.data.loadGeoJson('/geo.json')\n};return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:style.info},/*#__PURE__*/React.createElement(\"div\",{className:style.block},/*#__PURE__*/React.createElement(\"span\",{className:style.name},\"Latitude:\"),\" \",props.latitude,\", \",/*#__PURE__*/React.createElement(\"span\",{className:style.name},\"Longitude:\"),\" \",props.longitude),/*#__PURE__*/React.createElement(\"div\",{className:style.block},/*#__PURE__*/React.createElement(\"span\",{className:style.name},\"Address:\"),\" \",props.address),/*#__PURE__*/React.createElement(\"div\",{className:style.block},/*#__PURE__*/React.createElement(\"span\",{className:style.name},\"Temperature:\"),\" \",props.temp,\" degrees Celsius\"),/*#__PURE__*/React.createElement(\"div\",{className:style.block},/*#__PURE__*/React.createElement(\"span\",{className:style.name},\"Feels Like:\"),\" \",props.feelsLike,\" degrees Celsius\"),/*#__PURE__*/React.createElement(\"div\",{className:style.block},/*#__PURE__*/React.createElement(\"span\",{className:style.name},\"Description: \"),\" \",props.description)),/*#__PURE__*/React.createElement(LoadScript,{googleMapsApiKey:\"AIzaSyDal_A90HrAXBxIgC4jH4MyCKcbPTSnlJo\"},/*#__PURE__*/React.createElement(GoogleMap,{mapContainerStyle:containerStyle,center:center,zoom:19,onLoad:onMapLoad},/*#__PURE__*/React.createElement(Marker,{position:center}),/*#__PURE__*/React.createElement(React.Fragment,null))));};export default GeoMap;","map":{"version":3,"sources":["H:/BSUIR/Web/Test task React NiblSoft/my-app/src/components/MainPage/geoMap.js"],"names":["React","useEffect","GoogleMap","LoadScript","Marker","Geocode","style","GeoMap","props","geoFindMe","success","position","latitude","coords","longitude","setApiKey","fromLatLng","then","response","address","results","formatted_address","gettingWeather","fetch","api_url","json","data","console","log","temp","main","feelsLike","feels_like","description","weather","addItem","error","navigator","geolocation","getCurrentPosition","containerStyle","margin","width","height","center","lat","lng","onMapLoad","map","info","block","name"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react'\r\nimport {GoogleMap, LoadScript, Marker} from '@react-google-maps/api';\r\nimport Geocode from \"react-geocode\";\r\nimport style from \"./style.module.css\"\r\n\r\nconst GeoMap = (props) => {\r\n\r\n    useEffect(() => {\r\n        const geoFindMe = () => {\r\n\r\n            const success = position => {\r\n                const latitude = position.coords.latitude;\r\n                const longitude = position.coords.longitude;\r\n\r\n                Geocode.setApiKey(\"AIzaSyDal_A90HrAXBxIgC4jH4MyCKcbPTSnlJo\");\r\n                Geocode.fromLatLng(latitude, longitude).then(\r\n                    response => {\r\n                        const address = response.results[0].formatted_address;\r\n\r\n                        const gettingWeather = async () => {\r\n                            const api_url =\r\n                                await fetch(`https://openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=439d4b804bc8187953eb36d2a8c26a02&units=metric`);\r\n                            const data = await api_url.json();\r\n                            console.log(data);\r\n                            const temp = data.main.temp\r\n                            const feelsLike = data.main.feels_like\r\n                            const description = data.weather[0].description\r\n                            props.addItem(latitude, longitude, address, temp, feelsLike, description);\r\n                        }\r\n                        gettingWeather()\r\n\r\n\r\n                    },\r\n                    error => {\r\n                        console.error(error);\r\n                    }\r\n                );\r\n            };\r\n            navigator.geolocation.getCurrentPosition(success);\r\n        };\r\n        geoFindMe()\r\n    }, [])\r\n\r\n\r\n\r\n    const containerStyle = {\r\n        margin: \"auto\",\r\n        width: '70vw',\r\n        height: '100vh'\r\n    };\r\n\r\n    const center = {\r\n        lat: props.latitude,\r\n        lng: props.longitude\r\n    };\r\n\r\n    const onMapLoad = map => {\r\n        console.log('map.data: ', map.data)\r\n        // map.data.loadGeoJson('/geo.json')\r\n    }\r\n\r\n    return (\r\n\r\n        <div>\r\n            <div className={style.info}>\r\n                <div  className={style.block}>\r\n                   <span className={style.name}>Latitude:</span> {props.latitude}, <span className={style.name}>Longitude:</span> {props.longitude}\r\n                </div>\r\n\r\n               <div  className={style.block}>\r\n                   <span className={style.name}>Address:</span> {props.address}\r\n               </div>\r\n                <div  className={style.block}>\r\n                   <span className={style.name}>Temperature:</span> {props.temp} degrees Celsius\r\n                </div>\r\n                <div  className={style.block}>\r\n                    <span className={style.name}>Feels Like:</span> {props.feelsLike} degrees Celsius\r\n                </div>\r\n                <div  className={style.block}>\r\n                    <span className={style.name}>Description: </span> {props.description}\r\n                </div>\r\n\r\n\r\n\r\n            </div>\r\n\r\n            <LoadScript\r\n                googleMapsApiKey=\"AIzaSyDal_A90HrAXBxIgC4jH4MyCKcbPTSnlJo\"\r\n            >\r\n                <GoogleMap\r\n                    mapContainerStyle={containerStyle}\r\n                    center={center}\r\n                    zoom={19}\r\n                    onLoad={onMapLoad}\r\n                >\r\n                    <Marker\r\n                        position={center}\r\n                    />\r\n                    <></>\r\n                </GoogleMap>\r\n            </LoadScript>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GeoMap;"]},"metadata":{},"sourceType":"module"}