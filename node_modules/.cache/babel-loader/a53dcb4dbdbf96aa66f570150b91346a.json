{"ast":null,"code":"var _jsxFileName = \"H:\\\\BSUIR\\\\Web\\\\Test task React NiblSoft\\\\my-app\\\\src\\\\components\\\\MainPage\\\\geoMap.js\";\nimport React from 'react';\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\nimport Geocode from \"react-geocode\";\n\nclass GeoMap extends React.PureComponent {\n  constructor() {\n    super();\n    this._isMounted = false;\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n  }\n\n  render() {\n    const containerStyle = {\n      margin: \"auto\",\n      width: '70vw',\n      height: '100vh'\n    };\n    const center = {\n      lat: this.props.latitude,\n      lng: this.props.longitude\n    };\n\n    const onMapLoad = map => {\n      console.log('map.data: ', map.data); // map.data.loadGeoJson('/geo.json')\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        geoFindMe();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }, \"Find me\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }, \"Latitude: \", this.props.latitude, \", Longitude: \", this.props.longitude, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }\n    }, \"Address: \", this.props.address), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }\n    }, \"Temperature: \", this.props.temp, \" degrees Celsius\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 71\n      }\n    }), \"Feels Like: \", this.props.feelsLike, \" degrees Celsius\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 75\n      }\n    }), \"Description: \", this.props.description)), /*#__PURE__*/React.createElement(LoadScript, {\n      googleMapsApiKey: \"AIzaSyDal_A90HrAXBxIgC4jH4MyCKcbPTSnlJo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(GoogleMap, {\n      mapContainerStyle: containerStyle,\n      center: center,\n      zoom: 19,\n      onLoad: onMapLoad,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Marker, {\n      position: center,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(React.Fragment, null))));\n  }\n\n}\n\nexport default GeoMap;","map":{"version":3,"sources":["H:/BSUIR/Web/Test task React NiblSoft/my-app/src/components/MainPage/geoMap.js"],"names":["React","GoogleMap","LoadScript","Marker","Geocode","GeoMap","PureComponent","constructor","_isMounted","componentDidMount","render","containerStyle","margin","width","height","center","lat","props","latitude","lng","longitude","onMapLoad","map","console","log","data","geoFindMe","address","temp","feelsLike","description"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,EAAmBC,UAAnB,EAA+BC,MAA/B,QAA4C,wBAA5C;AACA,OAAOC,OAAP,MAAoB,eAApB;;AAEA,MAAMC,MAAN,SAAqBL,KAAK,CAACM,aAA3B,CAAyC;AACrCC,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,UAAL,GAAkB,KAAlB;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKD,UAAL,GAAkB,IAAlB;AAKH;;AACDE,EAAAA,MAAM,GAAG;AAIL,UAAMC,cAAc,GAAG;AACnBC,MAAAA,MAAM,EAAE,MADW;AAEnBC,MAAAA,KAAK,EAAE,MAFY;AAGnBC,MAAAA,MAAM,EAAE;AAHW,KAAvB;AAMA,UAAMC,MAAM,GAAG;AACXC,MAAAA,GAAG,EAAE,KAAKC,KAAL,CAAWC,QADL;AAEXC,MAAAA,GAAG,EAAE,KAAKF,KAAL,CAAWG;AAFL,KAAf;;AAKA,UAAMC,SAAS,GAAGC,GAAG,IAAI;AACrBC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,GAAG,CAACG,IAA9B,EADqB,CAErB;AACH,KAHD;;AAKA,wBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,OAAO,EAAE,MAAM;AACnBC,QAAAA,SAAS;AAEZ,OAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACe,KAAKT,KAAL,CAAWC,QAD1B,mBACiD,KAAKD,KAAL,CAAWG,SAD5D,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACc,KAAKH,KAAL,CAAWU,OADzB,CAFJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACkB,KAAKV,KAAL,CAAWW,IAD7B,mCACkD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADlD,kBAEiB,KAAKX,KAAL,CAAWY,SAF5B,mCAEsD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFtD,mBAGkB,KAAKZ,KAAL,CAAWa,WAH7B,CALJ,CAPJ,eAmBI,oBAAC,UAAD;AACI,MAAA,gBAAgB,EAAC,yCADrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGI,oBAAC,SAAD;AACI,MAAA,iBAAiB,EAAEnB,cADvB;AAEI,MAAA,MAAM,EAAEI,MAFZ;AAGI,MAAA,IAAI,EAAE,EAHV;AAII,MAAA,MAAM,EAAEM,SAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAMI,oBAAC,MAAD;AACI,MAAA,QAAQ,EAAEN,MADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,eASI,yCATJ,CAHJ,CAnBJ,CAFJ;AAsCH;;AAvEoC;;AA0EzC,eAAeV,MAAf","sourcesContent":["import React from 'react'\r\nimport {GoogleMap, LoadScript, Marker} from '@react-google-maps/api';\r\nimport Geocode from \"react-geocode\";\r\n\r\nclass GeoMap extends React.PureComponent {\r\n    constructor() {\r\n        super();\r\n        this._isMounted = false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._isMounted = true;\r\n\r\n        \r\n\r\n\r\n    }\r\n    render() {\r\n\r\n\r\n\r\n        const containerStyle = {\r\n            margin: \"auto\",\r\n            width: '70vw',\r\n            height: '100vh'\r\n        };\r\n\r\n        const center = {\r\n            lat: this.props.latitude,\r\n            lng: this.props.longitude\r\n        };\r\n\r\n        const onMapLoad = map => {\r\n            console.log('map.data: ', map.data)\r\n            // map.data.loadGeoJson('/geo.json')\r\n        }\r\n\r\n        return (\r\n\r\n            <div>\r\n                <button onClick={() => {\r\n                    geoFindMe()\r\n\r\n                }}>Find me\r\n                </button>\r\n\r\n                <div>\r\n                    Latitude: {this.props.latitude}, Longitude: {this.props.longitude}\r\n                    <p>\r\n                        Address: {this.props.address}\r\n                    </p>\r\n                    <div>\r\n                        Temperature: {this.props.temp} degrees Celsius<br/>\r\n                        Feels Like: {this.props.feelsLike} degrees Celsius<br/>\r\n                        Description: {this.props.description}\r\n                    </div>\r\n                </div>\r\n\r\n                <LoadScript\r\n                    googleMapsApiKey=\"AIzaSyDal_A90HrAXBxIgC4jH4MyCKcbPTSnlJo\"\r\n                >\r\n                    <GoogleMap\r\n                        mapContainerStyle={containerStyle}\r\n                        center={center}\r\n                        zoom={19}\r\n                        onLoad={onMapLoad}\r\n                    >\r\n                        <Marker\r\n                            position={center}\r\n                        />\r\n                        <></>\r\n                    </GoogleMap>\r\n                </LoadScript>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GeoMap;"]},"metadata":{},"sourceType":"module"}