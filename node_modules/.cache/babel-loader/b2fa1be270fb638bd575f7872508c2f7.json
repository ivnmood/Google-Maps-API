{"ast":null,"code":"const SET_GEOCOORDINATES = 'SET_GEOCOORDINATES';\nconst REMOVE_ITEM = 'REMOVE_ITEM';\nconst ADD_ITEM = 'ADD_ITEM';\nlet initialState = {// coordinates: [\n  //     {\n  //         id: 1,\n  //         latitude:  -21.8052,\n  //         longitude: -49.0898,\n  //         date: new Date('December 17, 1995 03:24:00'),\n  //         address: \"Unnamed Road, Iacanga - SP, 17180-000, Brazil\",\n  //     }\n  // ]\n};\n\nconst MainReducers = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_GEOCOORDINATES:\n      {\n        return { ...state,\n          coordinates: [...action.coordinates]\n        };\n      }\n\n    case REMOVE_ITEM:\n      {\n        return {\n          coordinates: [...state.coordinates].filter(coordinates => coordinates.id !== action.id)\n        };\n      }\n\n    case ADD_ITEM:\n      {\n        const newItem = {\n          latitude: action.latitude,\n          longitude: action.longitude,\n          date: new Date(),\n          address: action.address,\n          id: new Date().getTime()\n        };\n        return { ...state,\n          coordinates: [...state.coordinates, newItem]\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const setGeoCoordinates = coordinates => ({\n  type: SET_GEOCOORDINATES,\n  coordinates\n});\nexport const removeGeoItem = id => ({\n  type: REMOVE_ITEM,\n  id\n});\nexport const addGeoItem = (latitude, longitude, address) => ({\n  type: ADD_ITEM,\n  latitude,\n  longitude,\n  address\n});\nexport const requestGeoCoordinates = () => {\n  return dispatch => {\n    dispatch(setGeoCoordinates());\n  };\n};\nexport const removeItem = id => dispatch => {\n  dispatch(removeGeoItem(id));\n};\nexport const addItem = (latitude, longitude, address) => dispatch => {\n  dispatch(addGeoItem(latitude, longitude, address));\n};\nexport default MainReducers;","map":{"version":3,"sources":["H:/BSUIR/Web/Test task React NiblSoft/my-app/src/redux/MainPageReducer.js"],"names":["SET_GEOCOORDINATES","REMOVE_ITEM","ADD_ITEM","initialState","MainReducers","state","action","type","coordinates","filter","id","newItem","latitude","longitude","date","Date","address","getTime","setGeoCoordinates","removeGeoItem","addGeoItem","requestGeoCoordinates","dispatch","removeItem","addItem"],"mappings":"AAAA,MAAMA,kBAAkB,GAAG,oBAA3B;AACA,MAAMC,WAAW,GAAG,aAApB;AACA,MAAMC,QAAQ,GAAG,UAAjB;AAGA,IAAIC,YAAY,GAAG,CACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATe,CAAnB;;AAaA,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGF,YAAT,EAAuBG,MAAvB,KAAkC;AAEnD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKP,kBAAL;AAAyB;AACrB,eAAO,EACH,GAAGK,KADA;AAEHG,UAAAA,WAAW,EAAE,CAAC,GAAGF,MAAM,CAACE,WAAX;AAFV,SAAP;AAIH;;AACD,SAAKP,WAAL;AAAkB;AACd,eAAO;AAACO,UAAAA,WAAW,EAAE,CAAC,GAAGH,KAAK,CAACG,WAAV,EAAuBC,MAAvB,CAA8BD,WAAW,IAAIA,WAAW,CAACE,EAAZ,KAAmBJ,MAAM,CAACI,EAAvE;AAAd,SAAP;AACH;;AACD,SAAKR,QAAL;AAAe;AACX,cAAMS,OAAO,GAAG;AACZC,UAAAA,QAAQ,EAAEN,MAAM,CAACM,QADL;AAEZC,UAAAA,SAAS,EAAEP,MAAM,CAACO,SAFN;AAGZC,UAAAA,IAAI,EAAG,IAAIC,IAAJ,EAHK;AAIZC,UAAAA,OAAO,EAAEV,MAAM,CAACU,OAJJ;AAKZN,UAAAA,EAAE,EAAI,IAAIK,IAAJ,EAAD,CAAaE,OAAb;AALO,SAAhB;AAOA,eAAO,EACH,GAAGZ,KADA;AAEHG,UAAAA,WAAW,EAAE,CAAC,GAAGH,KAAK,CAACG,WAAV,EAAuBG,OAAvB;AAFV,SAAP;AAIH;;AAED;AACI,aAAON,KAAP;AAzBR;AA4BH,CA9BD;;AAiCA,OAAO,MAAMa,iBAAiB,GAAIV,WAAD,KAAkB;AAACD,EAAAA,IAAI,EAAEP,kBAAP;AAA2BQ,EAAAA;AAA3B,CAAlB,CAA1B;AACP,OAAO,MAAMW,aAAa,GAAIT,EAAD,KAAS;AAACH,EAAAA,IAAI,EAAEN,WAAP;AAAoBS,EAAAA;AAApB,CAAT,CAAtB;AACP,OAAO,MAAMU,UAAU,GAAG,CAACR,QAAD,EAAWC,SAAX,EAAsBG,OAAtB,MAAmC;AAACT,EAAAA,IAAI,EAAEL,QAAP;AAAiBU,EAAAA,QAAjB;AAA2BC,EAAAA,SAA3B;AAAsCG,EAAAA;AAAtC,CAAnC,CAAnB;AAGP,OAAO,MAAMK,qBAAqB,GAAG,MAAM;AACvC,SAASC,QAAD,IAAc;AAClBA,IAAAA,QAAQ,CAACJ,iBAAiB,EAAlB,CAAR;AAEH,GAHD;AAIH,CALM;AAOP,OAAO,MAAMK,UAAU,GAAIb,EAAD,IAASY,QAAD,IAAc;AAC5CA,EAAAA,QAAQ,CAACH,aAAa,CAACT,EAAD,CAAd,CAAR;AACH,CAFM;AAIP,OAAO,MAAMc,OAAO,GAAG,CAACZ,QAAD,EAAWC,SAAX,EAAsBG,OAAtB,KAAmCM,QAAD,IAAc;AACnEA,EAAAA,QAAQ,CAACF,UAAU,CAACR,QAAD,EAAWC,SAAX,EAAsBG,OAAtB,CAAX,CAAR;AACH,CAFM;AAIP,eAAeZ,YAAf","sourcesContent":["const SET_GEOCOORDINATES = 'SET_GEOCOORDINATES';\r\nconst REMOVE_ITEM = 'REMOVE_ITEM';\r\nconst ADD_ITEM = 'ADD_ITEM';\r\n\r\n\r\nlet initialState = {\r\n    // coordinates: [\r\n    //     {\r\n    //         id: 1,\r\n    //         latitude:  -21.8052,\r\n    //         longitude: -49.0898,\r\n    //         date: new Date('December 17, 1995 03:24:00'),\r\n    //         address: \"Unnamed Road, Iacanga - SP, 17180-000, Brazil\",\r\n    //     }\r\n    // ]\r\n\r\n};\r\n\r\nconst MainReducers = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_GEOCOORDINATES: {\r\n            return {\r\n                ...state,\r\n                coordinates: [...action.coordinates]\r\n            }\r\n        }\r\n        case REMOVE_ITEM: {\r\n            return {coordinates: [...state.coordinates].filter(coordinates => coordinates.id !== action.id)}\r\n        }\r\n        case ADD_ITEM: {\r\n            const newItem = {\r\n                latitude: action.latitude,\r\n                longitude: action.longitude,\r\n                date: (new Date()),\r\n                address: action.address,\r\n                id: ((new Date()).getTime())\r\n            }\r\n            return {\r\n                ...state,\r\n                coordinates: [...state.coordinates, newItem],\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n};\r\n\r\n\r\nexport const setGeoCoordinates = (coordinates) => ({type: SET_GEOCOORDINATES, coordinates})\r\nexport const removeGeoItem = (id) => ({type: REMOVE_ITEM, id})\r\nexport const addGeoItem = (latitude, longitude, address) => ({type: ADD_ITEM, latitude, longitude, address})\r\n\r\n\r\nexport const requestGeoCoordinates = () => {\r\n    return  (dispatch) => {\r\n        dispatch(setGeoCoordinates())\r\n\r\n    }\r\n}\r\n\r\nexport const removeItem = (id) => (dispatch) => {\r\n    dispatch(removeGeoItem(id))\r\n}\r\n\r\nexport const addItem = (latitude, longitude, address) => (dispatch) => {\r\n    dispatch(addGeoItem(latitude, longitude, address))\r\n}\r\n\r\nexport default MainReducers;"]},"metadata":{},"sourceType":"module"}