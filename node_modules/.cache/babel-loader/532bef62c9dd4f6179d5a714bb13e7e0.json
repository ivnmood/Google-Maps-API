{"ast":null,"code":"var _jsxFileName = \"H:\\\\BSUIR\\\\Web\\\\Test task React NiblSoft\\\\my-app\\\\src\\\\components\\\\HistoryPage\\\\GeoCoordinate.js\";\nimport React from \"react\";\nimport { Button } from 'antd';\nimport Geocode from \"react-geocode\";\n\nconst GeoCoordinate = ({\n  coordinate,\n  id,\n  removeItem\n}) => {\n  debugger;\n\n  const removeEmployee = () => {\n    removeItem(id);\n  };\n\n  const options = {\n    era: 'long',\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n    weekday: 'long',\n    timezone: 'UTC',\n    hour: 'numeric',\n    minute: 'numeric',\n    second: 'numeric'\n  };\n  Geocode.setApiKey(\"AIzaSyDal_A90HrAXBxIgC4jH4MyCKcbPTSnlJo\");\n  Geocode.fromLatLng(coordinate.latitude, coordinate.longitude).then(response => {\n    const address = response.results[0].formatted_address;\n    console.log(address);\n  }, error => {\n    console.error(error);\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 29\n    }\n  }, \"Latitude: \", coordinate.latitude), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 29\n    }\n  }, \"Longitude: \", coordinate.longitude), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 29\n    }\n  }, \"Address: \", coordinate.address), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 29\n    }\n  }, \"Date: \", coordinate.date.toLocaleString(\"en\", options)))), id !== 1 && /*#__PURE__*/React.createElement(Button, {\n    danger: true,\n    onClick: removeEmployee,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 23\n    }\n  }, \"Delete\"));\n};\n\nexport default GeoCoordinate;","map":{"version":3,"sources":["H:/BSUIR/Web/Test task React NiblSoft/my-app/src/components/HistoryPage/GeoCoordinate.js"],"names":["React","Button","Geocode","GeoCoordinate","coordinate","id","removeItem","removeEmployee","options","era","year","month","day","weekday","timezone","hour","minute","second","setApiKey","fromLatLng","latitude","longitude","then","response","address","results","formatted_address","console","log","error","date","toLocaleString"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,QAAqB,MAArB;AACA,OAAOC,OAAP,MAAoB,eAApB;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA,UAAD;AAAaC,EAAAA,EAAb;AAAiBC,EAAAA;AAAjB,CAAD,KAAkC;AACpD;;AAEA,QAAMC,cAAc,GAAG,MAAM;AACzBD,IAAAA,UAAU,CAACD,EAAD,CAAV;AACH,GAFD;;AAIA,QAAMG,OAAO,GAAG;AACZC,IAAAA,GAAG,EAAE,MADO;AAEZC,IAAAA,IAAI,EAAE,SAFM;AAGZC,IAAAA,KAAK,EAAE,MAHK;AAIZC,IAAAA,GAAG,EAAE,SAJO;AAKZC,IAAAA,OAAO,EAAE,MALG;AAMZC,IAAAA,QAAQ,EAAE,KANE;AAOZC,IAAAA,IAAI,EAAE,SAPM;AAQZC,IAAAA,MAAM,EAAE,SARI;AASZC,IAAAA,MAAM,EAAE;AATI,GAAhB;AAYAf,EAAAA,OAAO,CAACgB,SAAR,CAAkB,yCAAlB;AAEAhB,EAAAA,OAAO,CAACiB,UAAR,CAAmBf,UAAU,CAACgB,QAA9B,EAAwChB,UAAU,CAACiB,SAAnD,EAA8DC,IAA9D,CACIC,QAAQ,IAAI;AACR,UAAMC,OAAO,GAAGD,QAAQ,CAACE,OAAT,CAAiB,CAAjB,EAAoBC,iBAApC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AACH,GAJL,EAKIK,KAAK,IAAI;AACLF,IAAAA,OAAO,CAACE,KAAR,CAAcA,KAAd;AACH,GAPL;AAWA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAgBzB,UAAU,CAACgB,QAA3B,CADhB,eAEgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAiBhB,UAAU,CAACiB,SAA5B,CAFhB,eAGgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAejB,UAAU,CAACoB,OAA1B,CAHhB,eAIgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAYpB,UAAU,CAAC0B,IAAX,CAAgBC,cAAhB,CAA+B,IAA/B,EAAqCvB,OAArC,CAAZ,CAJhB,CADJ,CADG,EAYFH,EAAE,KAAK,CAAP,iBAAa,oBAAC,MAAD;AAAQ,IAAA,MAAM,MAAd;AAAe,IAAA,OAAO,EAAEE,cAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZX,CAAP;AAgBH,CAhDD;;AAkDA,eAAeJ,aAAf","sourcesContent":["import React from \"react\";\r\nimport {Button} from 'antd';\r\nimport Geocode from \"react-geocode\";\r\n\r\nconst GeoCoordinate = ({coordinate, id, removeItem}) => {\r\n    debugger\r\n\r\n    const removeEmployee = () => {\r\n        removeItem(id)\r\n    }\r\n\r\n    const options = {\r\n        era: 'long',\r\n        year: 'numeric',\r\n        month: 'long',\r\n        day: 'numeric',\r\n        weekday: 'long',\r\n        timezone: 'UTC',\r\n        hour: 'numeric',\r\n        minute: 'numeric',\r\n        second: 'numeric'\r\n    };\r\n\r\n    Geocode.setApiKey(\"AIzaSyDal_A90HrAXBxIgC4jH4MyCKcbPTSnlJo\");\r\n\r\n    Geocode.fromLatLng(coordinate.latitude, coordinate.longitude).then(\r\n        response => {\r\n            const address = response.results[0].formatted_address;\r\n            console.log(address);\r\n        },\r\n        error => {\r\n            console.error(error);\r\n        }\r\n    );\r\n\r\n\r\n    return <div>\r\n        <div>\r\n            <span>\r\n                            <div>Latitude: {coordinate.latitude}</div>\r\n                            <div>Longitude: {coordinate.longitude}</div>\r\n                            <div>Address: {coordinate.address}</div>\r\n                            <div>Date: {coordinate.date.toLocaleString(\"en\", options)}</div>\r\n\r\n\r\n                        </span>\r\n\r\n        </div>\r\n        {id !== 1 &&  <Button danger onClick={removeEmployee}>Delete</Button>}\r\n\r\n\r\n    </div>\r\n}\r\n\r\nexport default GeoCoordinate;"]},"metadata":{},"sourceType":"module"}