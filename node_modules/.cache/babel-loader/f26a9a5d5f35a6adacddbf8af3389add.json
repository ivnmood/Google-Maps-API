{"ast":null,"code":"var _jsxFileName = \"H:\\\\BSUIR\\\\Web\\\\Test task React NiblSoft\\\\my-app\\\\src\\\\components\\\\MainPage\\\\mainContainer.js\";\nimport React from \"react\";\n\nfunction geoFindMe() {\n  const status = document.querySelector('#status');\n  const mapLink = document.querySelector('#map-link');\n  mapLink.href = '';\n  mapLink.textContent = '';\n\n  function success(position) {\n    const latitude = position.coords.latitude;\n    const longitude = position.coords.longitude;\n    status.textContent = '';\n    mapLink.href = `https://www.openstreetmap.org/#map=18/${latitude}/${longitude}`;\n    mapLink.textContent = `Latitude: ${latitude} °, Longitude: ${longitude} °`;\n  }\n\n  function error() {\n    status.textContent = 'Unable to retrieve your location';\n  }\n\n  if (!navigator.geolocation) {\n    status.textContent = 'Geolocation is not supported by your browser';\n  } else {\n    status.textContent = 'Locating…';\n    navigator.geolocation.getCurrentPosition(success, error);\n  }\n}\n\ndocument.querySelector('#find-me').addEventListener('click', geoFindMe);\n\nfunction initMap() {\n  const map = new google.maps.Map(document.getElementById(\"map\"), {\n    zoom: 8,\n    center: {\n      lat: 40.731,\n      lng: -73.997\n    }\n  });\n  const geocoder = new google.maps.Geocoder();\n  const infowindow = new google.maps.InfoWindow();\n  document.getElementById(\"submit\").addEventListener(\"click\", () => {\n    geocodeLatLng(geocoder, map, infowindow);\n  });\n}\n\nfunction geocodeLatLng(geocoder, map, infowindow) {\n  const input = document.getElementById(\"latlng\").value;\n  const latlngStr = input.split(\",\", 2);\n  const latlng = {\n    lat: parseFloat(latlngStr[0]),\n    lng: parseFloat(latlngStr[1])\n  };\n  geocoder.geocode({\n    location: latlng\n  }, (results, status) => {\n    if (status === \"OK\") {\n      if (results[0]) {\n        map.setZoom(11);\n        const marker = new google.maps.Marker({\n          position: latlng,\n          map: map\n        });\n        infowindow.setContent(results[0].formatted_address);\n        infowindow.open(map, marker);\n      } else {\n        window.alert(\"No results found\");\n      }\n    } else {\n      window.alert(\"Geocoder failed due to: \" + status);\n    }\n  });\n}\n\nconst MainContainer = () => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    id: \"find-me\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, \"Show my location\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 61\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    id: \"status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"a\", {\n    id: \"map-link\",\n    target: \"_blank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"floating-panel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"latlng\",\n    type: \"text\",\n    value: \"40.714224,-73.961452\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"submit\",\n    type: \"button\",\n    value: \"Reverse Geocode\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"map\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default MainContainer;","map":{"version":3,"sources":["H:/BSUIR/Web/Test task React NiblSoft/my-app/src/components/MainPage/mainContainer.js"],"names":["React","geoFindMe","status","document","querySelector","mapLink","href","textContent","success","position","latitude","coords","longitude","error","navigator","geolocation","getCurrentPosition","addEventListener","initMap","map","google","maps","Map","getElementById","zoom","center","lat","lng","geocoder","Geocoder","infowindow","InfoWindow","geocodeLatLng","input","value","latlngStr","split","latlng","parseFloat","geocode","location","results","setZoom","marker","Marker","setContent","formatted_address","open","window","alert","MainContainer"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\n\r\n\r\nfunction geoFindMe() {\r\n\r\n    const status = document.querySelector('#status');\r\n    const mapLink = document.querySelector('#map-link');\r\n\r\n    mapLink.href = '';\r\n    mapLink.textContent = '';\r\n\r\n    function success(position) {\r\n        const latitude  = position.coords.latitude;\r\n        const longitude = position.coords.longitude;\r\n\r\n        status.textContent = '';\r\n        mapLink.href = `https://www.openstreetmap.org/#map=18/${latitude}/${longitude}`;\r\n        mapLink.textContent = `Latitude: ${latitude} °, Longitude: ${longitude} °`;\r\n    }\r\n\r\n    function error() {\r\n        status.textContent = 'Unable to retrieve your location';\r\n    }\r\n\r\n    if(!navigator.geolocation) {\r\n        status.textContent = 'Geolocation is not supported by your browser';\r\n    } else {\r\n        status.textContent = 'Locating…';\r\n        navigator.geolocation.getCurrentPosition(success, error);\r\n    }\r\n\r\n}\r\n\r\ndocument.querySelector('#find-me').addEventListener('click', geoFindMe);\r\n\r\n\r\n\r\n\r\nfunction initMap() {\r\n    const map = new google.maps.Map(document.getElementById(\"map\"), {\r\n        zoom: 8,\r\n        center: { lat: 40.731, lng: -73.997 }\r\n    });\r\n    const geocoder = new google.maps.Geocoder();\r\n    const infowindow = new google.maps.InfoWindow();\r\n    document.getElementById(\"submit\").addEventListener(\"click\", () => {\r\n        geocodeLatLng(geocoder, map, infowindow);\r\n    });\r\n}\r\n\r\nfunction geocodeLatLng(geocoder, map, infowindow) {\r\n    const input = document.getElementById(\"latlng\").value;\r\n    const latlngStr = input.split(\",\", 2);\r\n    const latlng = {\r\n        lat: parseFloat(latlngStr[0]),\r\n        lng: parseFloat(latlngStr[1])\r\n    };\r\n    geocoder.geocode({ location: latlng }, (results, status) => {\r\n        if (status === \"OK\") {\r\n            if (results[0]) {\r\n                map.setZoom(11);\r\n                const marker = new google.maps.Marker({\r\n                    position: latlng,\r\n                    map: map\r\n                });\r\n                infowindow.setContent(results[0].formatted_address);\r\n                infowindow.open(map, marker);\r\n            } else {\r\n                window.alert(\"No results found\");\r\n            }\r\n        } else {\r\n            window.alert(\"Geocoder failed due to: \" + status);\r\n        }\r\n    });\r\n}\r\n\r\n\r\nconst MainContainer = () => {\r\n    return (\r\n        <div>\r\n            <button id = \"find-me\">Show my location</button><br/>\r\n            <p id = \"status\"></p>\r\n            <a id = \"map-link\" target=\"_blank\"></a>\r\n\r\n\r\n            <div id=\"floating-panel\">\r\n                <input id=\"latlng\" type=\"text\" value=\"40.714224,-73.961452\" />\r\n                <input id=\"submit\" type=\"button\" value=\"Reverse Geocode\" />\r\n            </div>\r\n            <div id=\"map\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainContainer;"]},"metadata":{},"sourceType":"module"}